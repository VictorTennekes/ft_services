# ---------- Config ---------- #
apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
data:
  telegraf.conf: |+
    [global_tags]
      user = "${INFLUX_USER}"
    [agent]
      interval = "10s"
      round_interval = true
      metric_batch_size = 1000
      metric_buffer_limit = 10000
      collection_jitter = "0s"
      flush_interval = "30s"
      flush_jitter = "0s"
#      precision = ""
      hostname = ""
      omit_hostname = false
    [[outputs.influxdb]]
      urls = ["${INFLUX_URL}"]
      database = "telegraf"
      skip_database_creation = false
      timeout = "5s"
      username = "${INFLUX_USER}"
      password = "${INFLUX_PASSWORD}"
      user_agent = "telegraf"
#    [[inputs.cpu]]
#      percpu = true
#      totalcpu = true
#      collect_cpu_time = false
#      report_active = false
#    [[inputs.disk]]
#      ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
    [[inputs.kube_inventory]]
      namespace = "default"
      url = "https://kubernetes.default.svc:443/"
      bearer_token = "/var/run/secrets/kubernetes.io/serviceaccount/token"
      resource_include = [ "deployments" ]
#      resource_exclude = [ "persistentvolumes", "persistentvolumeclaims", "nodes", "statefulsets", "daemonsets" ]
      tls_ca = "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      insecure_skip_verify = false

# ---------- Service ---------- #
apiVersion: v1
kind: Service
metadata:
  name: telegraf-svc
  labels:
    app: telegraf-app
spec:
  ports:
  - port: 4999
    protocol: TCP
    name: http
  selector:
    app: telegraf-app

---

# ---------- Deployment ---------- #
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf-deployment
  labels:
    app: telegraf-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: telegraf-app
  template:
    metadata:
      labels:
        app: telegraf-app
    spec:
      containers:
      - name: telegraf
        image: telegraf
        ports:
        - containerPort: 4999
        imagePullPolicy: Never
        env:
          - name: INFLUX_USER
            value: telegraf
          - name: INFLUX_URL
            value: "http://influxdb-svc:8086"
          - name: INFLUX_PASSWORD
            value: "pass"
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - name: telegraf-config-volume
            mountPath: /etc/telegraf/telegraf.conf
            subPath: telegraf.conf
            readOnly: true
      volumes:
        - name: telegraf-config-volume
          configMap:
            name: telegraf-config

---

# ---------- Role(Binding) ---------- #
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-rbac
  namespace: default
rules:
- apiGroups:
  - ""
  - extensions
  - apps
  resources:
  - daemonsets
  - deployments
  - endpoints
  - ingresses
  - nodes
  - persistentvolumes
  - persistentvolumeclaims
  - pods
  - services
  - statefulsets
  verbs:
  - get
  - list
  - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-rbac
  namespace: default
roleRef:
  kind: Role
  name: role-rbac
  apiGroup: ""
subjects:
- kind: ServiceAccount
  name: default
  namespace: default